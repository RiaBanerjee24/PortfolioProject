# User and Worker Process Configuration
user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

# Error Logging
error_log  /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
}

http {
    # Include Mime Types (required for proper content-type detection)
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    limit_req_zone $binary_remote_addr zone=global_limit:10m rate=10r/m;

    # Logs
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    # Enable sending files and set buffer sizes for performance
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Include SSL settings for HTTPS
    server {
        listen 80;
        server_name riabanerjee.dev www.riabanerjee.dev;

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS Server Block
    server {
        listen 443 ssl;
        server_name riabanerjee.dev www.riabanerjee.dev;

        # SSL Certificate and Key
        ssl_certificate /etc/nginx/certs/riabanerjee_dev.crt;
        ssl_certificate_key /etc/nginx/certs/riabanerjee.key;
        ssl_trusted_certificate /etc/nginx/certs/riabanerjee_dev.ca-bundle;

        
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        root /usr/share/nginx/html;
        index index.html;
        # Handle all requests with the React app's static files
        location / {            
            try_files $uri /index.html;  # React handles routing
        }

        # Optionally configure caching for static assets
        location ~* \.(?:css|js|jpg|jpeg|gif|png|woff|woff2|svg|eot|ttf|otf)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        # Reverse Proxy to Flask Backend
        location /api/ {     
        limit_req zone=global_limit burst=10 nodelay;

        proxy_pass http://riabanerjee.dev:5000/;        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    }
    }
    

